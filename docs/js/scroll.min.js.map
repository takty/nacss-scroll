{"version":3,"sources":["scroll.js"],"names":["window","NS","setClass","tar","cls","enabled","val","key","substr","startsWith","dataset","c","join","classList","add","remove","resizeListeners","onResize","fn","doFirst","push","isRunning","args","requestAnimationFrame","throttle","onIntersect","targets","threshold","rootMargin","vs","Array","length","fill","tm","Map","forEach","t","i","set","mt","io","st","s","getComputedStyle","document","documentElement","parseInt","scrollPaddingTop","Number","isNaN","getScrollOffset","clearTimeout","setTimeout","disconnect","IntersectionObserver","es","e","get","target","isIntersecting","replace","observe","init","addEventListener","l","passive","apply","ts","opts","Object","assign","styleEffect"],"mappings":"AAOA,aAEAA,OAAc,MAAcA,OAAc,OAAe,CAAC,EAC1DA,OAAc,MAAU,OAAIA,OAAc,MAAU,QAAK,CAAC,EAE1D,CAAEC,IAkBD,SAASC,EAASC,EAAKC,EAAKC,GAAU,EAAMC,EAAM,IACjD,MAAMC,EAAMH,EAAII,OAAO,GACvB,GAAIJ,EAAIK,WAAW,KACdJ,EACHF,EAAIO,QAAQH,GAAOD,SAEZH,EAAIO,QAAQH,OAEd,CACN,MAAMI,EAAI,CAACJ,EAAKD,GAAKM,KAAK,KACtBP,EACHF,EAAIU,UAAUC,IAAIH,GAElBR,EAAIU,UAAUE,OAAOJ,EAEvB,CACD,CAuCA,MAAMK,EAAkB,GAExB,SAASC,EAASC,EAAIC,GAAU,GAC3BA,GAASD,IACbF,EAAgBI,KAhBjB,SAAkBF,GACjB,IAAIG,EACJ,MAAO,IAAIC,KACND,IACJA,GAAY,EACZE,uBAAsB,KACrBF,GAAY,EACZH,KAAMI,EAAK,IACV,CAEJ,CAMsBE,CAASN,GAC/B,CAYA,SAASO,EAAYP,EAAIQ,EAASC,EAAY,EAAGC,EAAa,iBAC7D,MAAMC,EAAKC,MAAMJ,EAAQK,QAAQC,MAAK,GAChCC,EAAK,IAAIC,IACfR,EAAQS,SAAQ,CAACC,EAAGC,IAAMJ,EAAGK,IAAIF,EAAGC,KAUpC,IAAIE,EAAK,EACLC,EAAK,KACLC,EAAK,KACTxB,GAAS,KACRsB,GAxDF,WACC,MAAMG,EAAMC,iBAAiBC,SAASC,iBAChCvC,EAAMwC,SAASJ,EAAEK,kBACvB,OAAOC,OAAOC,MAAM3C,GAAO,EAAIA,CAChC,CAoDQ4C,GACFT,GAAIU,aAAaV,GACrBA,EAAKW,YAAW,KACXZ,GAAIA,EAAGa,aACXb,EAhBF,WACC,MAAMA,EAAK,IAAIc,sBAAsBC,IACpC,IAAK,MAAMC,KAAKD,EAAI1B,EAAGI,EAAGwB,IAAID,EAAEE,SAAWF,EAAEG,eAC7CzC,EAAGW,EAAG,GACJ,CAAED,WAAYA,EAAWgC,QAAQ,IAAM,GAAErB,OAASZ,cACrD,IAAK,MAAMS,KAAKV,EAASc,EAAGqB,QAAQzB,GACpC,OAAOI,CACR,CASOsB,EAAM,GACT,IAAI,IACL,EACJ,CAlCAlB,SAASmB,iBAAiB,oBAAoB,KAC7C/D,OAAO+D,iBAAiB,UAAU,KACjC,IAAK,MAAMC,KAAKhD,EAAiBgD,GAAG,GAClC,CAAEC,SAAS,GAAO,IA+DtBhE,EAAGiE,MAtBH,SAAeC,EAAIC,EAAO,CAAC,GACR,IAAdD,EAAGpC,SAEPqC,EAAOC,OAAOC,OAAO,CACpBC,YAAa,kBACb5C,UAAa,IACXyC,GAEH3C,GACA,SAAqBI,GACpB,IAAK,IAAIQ,EAAI,EAAGA,EAAI8B,EAAGpC,OAAQM,GAAK,EAC/BR,EAAGQ,IAAInC,EAASiE,EAAG9B,GAAI+B,EAAkB,aAAG,EAAM,UAExD,GALyBD,EAAIC,EAAgB,UAAG,uBAOhDpE,OAAO+D,iBAAiB,eAAe,KACtC,IAAK,MAAMpD,KAAKwD,EACfjE,EAASS,EAAGyD,EAAkB,aAAG,EAAM,UACxC,IAEF,CAIA,EApJD,CAoJGpE,OAAc,MAAU","file":"scroll.min.js","sourcesContent":["/**\n * Scroll Effect\n *\n * @author Takuto Yanagida\n * @version 2021-12-26\n */\n\n'use strict';\n\nwindow['NACSS']           = window['NACSS']           || {};\nwindow['NACSS']['scroll'] = window['NACSS']['scroll'] || {};\n\n((NS) => {\n\n\t/**\n\t * Style Class Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-11\n\t */\n\t\n\tfunction hasClass(tar, cls) {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn tar.dataset[key] !== undefined;\n\t\t} else {\n\t\t\treturn tar.classList.contains(key);\n\t\t}\n\t}\n\t\n\tfunction setClass(tar, cls, enabled = true, val = '') {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\tif (enabled) {\n\t\t\t\ttar.dataset[key] = val;\n\t\t\t} else {\n\t\t\t\tdelete tar.dataset[key];\n\t\t\t}\n\t\t} else {\n\t\t\tconst c = [key, val].join('-');\n\t\t\tif (enabled) {\n\t\t\t\ttar.classList.add(c);\n\t\t\t} else {\n\t\t\t\ttar.classList.remove(c);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getSelector(cls) {\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn `*[data-${cls.substr(1).replace(/([A-Z])/g, c => '-' + c.charAt(0).toLowerCase())}]`;\n\t\t} else {\n\t\t\treturn `*${cls}`;\n\t\t}\n\t}\n\t\n\t/**\n\t * Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-12-06\n\t */\n\t\n\tfunction getScrollOffset() {\n\t\tconst s   = getComputedStyle(document.documentElement);\n\t\tconst val = parseInt(s.scrollPaddingTop);\n\t\treturn Number.isNaN(val) ? 0 : val;\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\treturn (...args) => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tisRunning = false;\n\t\t\t\tfn(...args);\n\t\t\t});\n\t\t};\n\t}\n\t\n\tconst resizeListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\twindow.addEventListener('resize', () => {\n\t\t\tfor (const l of resizeListeners) l();\n\t\t}, { passive: true });\n\t});\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction onIntersect(fn, targets, threshold = 0, rootMargin = '* 0px 0px 0px') {\n\t\tconst vs = Array(targets.length).fill(false);\n\t\tconst tm = new Map();\n\t\ttargets.forEach((t, i) => tm.set(t, i));\n\t\n\t\tfunction init() {\n\t\t\tconst io = new IntersectionObserver((es) => {\n\t\t\t\tfor (const e of es) vs[tm.get(e.target)] = e.isIntersecting;\n\t\t\t\tfn(vs);\n\t\t\t}, { rootMargin: rootMargin.replace('*', `${mt}px`), threshold });\n\t\t\tfor (const t of targets) io.observe(t);\n\t\t\treturn io;\n\t\t}\n\t\tlet mt = 0;\n\t\tlet io = null;\n\t\tlet st = null;\n\t\tonResize(() => {\n\t\t\tmt = -getScrollOffset();\n\t\t\tif (st) clearTimeout(st);\n\t\t\tst = setTimeout(() => {\n\t\t\t\tif (io) io.disconnect();\n\t\t\t\tio = init();\n\t\t\t}, 100);\n\t\t}, true);\n\t}\n\t\n\n\t/**\n\t * Scroll Effect\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2023-07-27\n\t */\n\t\n\tfunction apply(ts, opts = {}) {\n\t\tif (ts.length === 0) return;\n\t\n\t\topts = Object.assign({\n\t\t\tstyleEffect: ':ncScrollEffect',\n\t\t\tthreshold  : 0.5,\n\t\t}, opts);\n\t\n\t\tonIntersect(doIntersect, ts, opts['threshold'], '* 10000% 0px 10000%');\n\t\tfunction doIntersect(vs) {\n\t\t\tfor (let i = 0; i < ts.length; i += 1) {\n\t\t\t\tif (vs[i]) setClass(ts[i], opts['styleEffect'], true, 'visible');\n\t\t\t}\n\t\t}\n\t\n\t\twindow.addEventListener('beforeprint', () => {\n\t\t\tfor (const c of ts) {\n\t\t\t\tsetClass(c, opts['styleEffect'], true, 'visible');\n\t\t\t}\n\t\t});\n\t}\n\t\n\tNS.apply = apply;\n\n})(window['NACSS']['scroll']);\n"]}